<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	
	<!-- 
		配置org.springframework.web.filter.HiddenHttpMethodFilter：可以把 POST 请求转为 DELETE 或 PUT 请求 
		需要在发送POST请求时携带一个name="_method"的隐藏域
	 -->
	<filter>
		<filter-name>hiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>hiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	<!-- 配置DispatcherServlet -->
	<servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 配置DispatcherServlet的一个初始化参数：配置SpringMVC配置文件的位置和名称 -->
		<!-- 实际上也可以不通过 contextConfigLocation 来配置 SpringMVC 的配置文件, 而使用.
			默认的配置文件为: /WEB-INF/<servlet-name>-servlet.xml -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- 
		1.  以 /* 结尾的。 path.endsWith("/*")，/* 对应的Servlet会被丢到wildcardWrappers中
		2.  以 *. 开头的。 path.startsWith("*.")，*. 会被丢到extensionWrappers中
		3.  是否是 /。      path.equals("/")，/ 会被丢到defaultWrapper中
		4.  以上3种之外的，其他的映射都被丢到exactWrappers中
		
		规则1：精确匹配，使用contextVersion的exactWrappers
		规则2：前缀匹配，使用contextVersion的wildcardWrappers
		规则3：扩展名匹配，使用contextVersion的extensionWrappers .jsp或.jspx
		规则4：使用资源文件来处理servlet，使用contextVersion的welcomeResources属性，这个属性是个字符串数组
		规则7：使用默认的servlet，使用contextVersion的defaultWrapper
		
		如果使用/*，这个url-pattern除了精确地址，其他地址都由这个DispatcherServlet执行。
		比如这个http://localhost:8888/SpringMVCDemo/index.jsp那么就会进入SpringMVC的DispatcherServlet中进行处理，
		最终没有没有匹配到 /index.jsp 这个 RequestMapping
	 -->

</web-app>